"use strict";
(self["webpackChunktheme"] = self["webpackChunktheme"] || []).push([["PageNavSlider"],{

/***/ "./src/js/components/PageNavSlider.js":
/*!********************************************!*\
  !*** ./src/js/components/PageNavSlider.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ PageNavSlider)
/* harmony export */ });
/* harmony import */ var swiper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! swiper */ "./node_modules/swiper/swiper.mjs");
/* provided dependency */ var $ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

var PageNavSlider = /*#__PURE__*/_createClass(function PageNavSlider() {
  var _this = this;
  _classCallCheck(this, PageNavSlider);
  _defineProperty(this, "init", function () {
    _this.setDomMap();
    _this.bindEvents();
  });
  _defineProperty(this, "setDomMap", function () {
    _this.window = $(window);
    _this.body = $("body");
  });
  _defineProperty(this, "bindEvents", function () {
    var sliders = document.querySelectorAll(".page-nav-slider");
    var swipers = [];
    if (sliders.length > 0) {
      sliders.forEach(function (slider) {
        var swiper = new swiper__WEBPACK_IMPORTED_MODULE_0__["default"](slider, {
          slidesPerView: "auto",
          speed: 1000,
          freeMode: true,
          touchEventsTarget: "container",
          breakpoints: {
            767: {
              spaceBetween: 30
            },
            320: {
              spaceBetween: 20,
              slidesOffsetAfter: 20
            }
          }
        });
        swipers.push(swiper);
      });
    }
    var sections = document.querySelectorAll(".section-block");
    var pageNav = document.querySelector(".page-nav");
    var pageNavPosition = document.querySelector(".page-nav-postion");
    var header = document.querySelector("header");
    var navLinks = document.querySelectorAll(".page-nav a");
    function isElementInViewport(el) {
      var rect = el.getBoundingClientRect();
      return rect.top <= window.innerHeight / 2 && rect.bottom >= window.innerHeight / 2;
    }
    $(document).on("click", ".page-nav a", function () {
      // Make sure this.hash has a value before overriding default behavior
      $(this).parent().addClass("active");
      $(this).parent().siblings().removeClass("active");
      if (this.hash !== "") {
        var hash = this.hash;
        $("html, body").animate({
          scrollTop: $(hash).offset().top - 100
        }, 1200, function () {
          // Add hash (#) to URL when done scrolling (default click behavior)
          window.location.hash = hash;
        });
      } // End if
    });
    window.onscroll = function () {
      var sectionInView = false;
      sections.forEach(function (sec, index) {
        var id = sec.getAttribute("id");
        if (isElementInViewport(sec)) {
          sectionInView = true;
          navLinks.forEach(function (links) {
            links.classList.remove("active");
          });
          document.querySelector(".page-nav a[href='#" + id + "']").classList.add("active");
          swipers.forEach(function (swiper) {
            swiper.slideTo(index);
          });
        }
      });
      if (!sectionInView) {
        navLinks.forEach(function (links) {
          links.classList.remove("active");
        });
      }
      var rect = pageNavPosition.getBoundingClientRect();
      if (rect.top <= 0 && !header.classList.contains("sticky")) {
        pageNav.classList.add("fixed");
      } else {
        pageNav.classList.remove("fixed");
      }
    };
  });
  this.init();
});


/***/ })

}]);
//# sourceMappingURL=PageNavSlider-1.8.min.js.map